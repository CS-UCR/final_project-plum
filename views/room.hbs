
<iframe width="0" height="0" src="https://www.youtube.com/embed/42Yw2Llnwzw?autoplay=1" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
<img src="https://imgur.com/TBbUuNK.gif" style="position: absolute; width: 100%; height: 100%;">
<div class="text-right mx-5 my-3" style="position: relative;">
    <a style="font-weight: bold; color: white; background-color: #835983; padding: 10px; border-radius: 10px; margin: 5px;" href="/login">Login</a>
    <a style="font-weight: bold; color: white; background-color: #835983; padding: 10px; border-radius: 10px; margin: 5px;" href="/register">Signup</a>
</div>
<div class="text-left mx-5 my-5" style="position: relative;">
    <h1 style="color: white"> {{ roomName }} </h1>
    <p class="d-none" id="theName">{{ roomName }}</p>
    <p style="width:550px; color: white; background-color: #8b0000"> Please ensure you are logged in before sending a message. </p>
    <p style="color: white">If you would like to search for a specific chat message, use the search bar given below. Happy chatting :-) !</p>

    <div>
      <input id="searchBar" type="search" placeholder="  Search Messages" style="border-radius: 30px; border-color: #4AB3F4; border-width: 2px;">
      <input type="checkbox">
    </div>
<br><br>
<div class="mx-5 px-5" id="tweet-container" style="position: relative;"></div>
{{!-- <form action="/delete" method="POST">
                                <input type="hidden" name="chatID" value={{this.ID}}>
                                <input type="submit" value="Delete"/>
                            </form> --}}
    <div class="text-center" id="Edit"></div>
    <div id="list-template" class="row mt-2" style="overflow-y: scroll; height: 300px; overflow: auto; margin-left: 250px; width: 700px; background-color: white; border-radius: 20px; border-color: pink; padding: 40px;">
            <script>
                fetch('http://localhost:8080/getChat')
                .then(response => response.json())
                .then(data => {
                    var chatsJson = data;
                    console.log(chatsJson);
                    var html = "";
                    var ul_element = document.getElementById('list-template');
                    
                    document.getElementById('list-template').innerHTML=" "
                    
                    var ul = document.createElement('ul')
                    ul.setAttribute('style', 'list-style: none')

                    for(var j = 0; j < chatsJson.length; ++j) {
                        if(chatsJson[j].roomName == document.getElementById('theName').innerHTML) {
                            var br = document.createElement('br')
                            var li = document.createElement('li');
                            li.setAttribute('id', chatsJson[j].ID + 1)
                            var b = document.createElement('b');
                            var i = document.createElement('i');
                            var h5 = document.createElement('h5');
                            h5.innerHTML = "HELLOOOO"
                            h5.setAttribute('style', 'color: white')

                            //DELETE FORM CODE
                            var form = document.createElement('form')
                            form.setAttribute('action', '/delete')
                            form.setAttribute('method', 'POST')
                            var input1 = document.createElement('input')
                            input1.setAttribute('name', 'chatID')
                            input1.setAttribute('type', 'hidden')
                            input1.setAttribute('value', chatsJson[j].ID)
                            var input2 = document.createElement('input')
                            input2.setAttribute('value', 'Delete')
                            input2.setAttribute('type', 'submit')
                            form.appendChild(input1)
                            form.appendChild(input2)

                            var button = document.createElement('button')
                            button.setAttribute('id', chatsJson[j].ID)
                            button.setAttribute('onclick', 'edit(this.id)')
                            button.innerHTML="Edit"

                            b.innerHTML = chatsJson[j].author;
                            ul.appendChild(li)
                            li.appendChild(form)
                            li.appendChild(button)
                            li.appendChild(b);
                            
                            document.getElementById('list-template').appendChild(ul);
                           
                            li.innerHTML = li.innerHTML + " at " + data[j].date + ": " + data[j].text;
                            li.appendChild(h5)
                            
                        }
                    }

                })
                .catch(err => {
                    console.log("ERROR" + err)
                });
            </script>>
    </div>

    <br><br>
    <form class="row" style="margin-left: 470px;" action="/createMsg" method="POST">
    <input type="text" name="chatBox" placeholder="Type a message">
    <input type="hidden" name="roomName" value={{roomName}}>
    <input type="submit" value="Send message"/>
</form>
</div>



<br><br><br><br>
<a class="text-left mx-5" style="position: relative; color:white" href="/">Return to Home Page</a>

<script>
    function edit(ID) {
//DELETE FORM CODE
                            var form = document.createElement('form')
                            form.setAttribute('action', '/myEdit')
                            form.setAttribute('method', 'POST')
                            var input1 = document.createElement('input')
                            input1.setAttribute('name', 'chatID2')
                            input1.setAttribute('type', 'hidden')
                            input1.setAttribute('value', ID)
                            var input2 = document.createElement('input')
                            input2.setAttribute('name', 'chatBox2')
                            input2.setAttribute('type', 'text')
                            input2.setAttribute('placeholder', 'Type a Message')
                            var input3 = document.createElement('input')
                            input3.setAttribute('value', 'Edit Message')
                            input3.setAttribute('type', 'submit')
                            form.appendChild(input1)
                            form.append(input2)
                            form.appendChild(input3)

        document.getElementById('Edit').appendChild(form)
        console.log(ID)
    }
</script>
<script src="https://twitter.github.io/typeahead.js/js/handlebars.js"></script>

 <script>
    window.addEventListener('load', function () {
        setInterval(async function(){
            fetch('http://localhost:8080/getChat')
                .then(response => response.json())
                .then(data => {
                    var chatsJson = data;
                    console.log(chatsJson);
                    var html = "";
                    var ul_element = document.getElementById('list-template');
                    
                    document.getElementById('list-template').innerHTML=" "

                    var ul = document.createElement('ul')
                    ul.setAttribute('style', 'list-style: none')

                    for(var j = 0; j < chatsJson.length; ++j) {
                        if(chatsJson[j].roomName == document.getElementById('theName').innerHTML) {
                            var br = document.createElement('br')
                            var li = document.createElement('li');
                            li.setAttribute('id', chatsJson[j].ID + 1)
                            var b = document.createElement('b');
                            var i = document.createElement('i');
                            var h5 = document.createElement('h5');
                            h5.innerHTML = "HELLOOOO"
                            h5.setAttribute('style', 'color: white')

                            //DELETE FORM CODE
                            var form = document.createElement('form')
                            var form = document.createElement('form')
                            form.setAttribute('action', '/delete')
                            form.setAttribute('method', 'POST')
                            var input1 = document.createElement('input')
                            input1.setAttribute('name', 'chatID')
                            input1.setAttribute('type', 'hidden')
                            input1.setAttribute('value', chatsJson[j].ID)
                            var input2 = document.createElement('input')
                            input2.setAttribute('value', 'Delete')
                            input2.setAttribute('type', 'submit')
                            form.appendChild(input1)
                            form.appendChild(input2)

                            var button = document.createElement('button')
                            button.setAttribute('id', chatsJson[j].ID)
                            button.setAttribute('onclick', 'edit(this.id)')
                            button.innerHTML="Edit"

                            b.innerHTML = chatsJson[j].author;
                            ul.appendChild(li)
                            li.appendChild(form)
                            li.appendChild(button)
                            li.appendChild(b);
                            
                            document.getElementById('list-template').appendChild(ul);
                           
                            li.innerHTML = li.innerHTML + " at " + data[j].date + ": " + data[j].text;
                            li.appendChild(h5)
                            
                        }
                    }

                })
                .catch(err => {
                    console.log("ERROR" + err)
                });
        }, 3000);
    }); 
</script> 

<script>
    var myData;
	var j = 0;
	var id_list = [];
	var tweets_list = []; //chats, not tweets 
    var flag = 1;
    var intervalID;
    var searchString = "" // here we use a global variable
    var filteredResult = [];

    window.onload=function(){
                //SEARCHBAR EVENT
                const handleSearch = event => {
                    searchString = event.target.value.trim().toLowerCase(); 
                    refreshTweets(tweets_list);
                }
                document.getElementById("searchBar").addEventListener("input", handleSearch)

        intervalID = setInterval(test, 5000);
        document.querySelector("input[type=checkbox]").addEventListener("change", function() {
            flag = 1 - flag;
            if (flag == 1) {
                intervalID = setInterval(test, 5000);
            }
            
            else {
                clearInterval(intervalID);
            }
        }, false);
            

            function test(){
                fetch('http://localhost:8080/getChat')
                .then(res => res.json()) .then(data => {  
                    myData = data;
                  //  myFunc();x
                  tweets_list = myData;
                  console.log("tweets_list:");
                  console.log(tweets_list);

                }).catch(err => {console.log(err) })
            }
    

            const tweetContainer = document.getElementById('tweet-container');

            /**
             * Removes all existing tweets from tweetList and then append all tweets back in
             *
             * @param {Array<Object>} tweets - A list of tweets
             * @returns None, the tweets will be renewed
             */
            function refreshTweets(tweet_list) {
               
                // feel free to use a more complicated heuristics like in-place-patch, for simplicity, we will clear all tweets and append all tweets back
                // {@link https://stackoverflow.com/questions/3955229/remove-all-child-elements-of-a-dom-node-in-javascript}
                while (tweetContainer.firstChild) {
                    tweetContainer.removeChild(tweetContainer.firstChild);
                }

                // create an unordered list to hold the tweets
                // {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/createElement}
                const tweetList = document.createElement("ul");
                tweetList.setAttribute('style', 'list-style: none')
                // append the tweetList to the tweetContainer
                // {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/appendChild}
                tweetContainer.appendChild(tweetList);

                // all tweet objects (no duplicates) stored in tweets variable
                console.log("tweet_list2:");
                console.log(tweet_list);
                // filter on search text
                // {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter}
                filteredResult = tweet_list.filter(tweet_list => tweet_list.text.search(searchString) != -1);
                // sort by date
                // {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort}
                const sortedResult = filteredResult;
                
                console.log("sortedResult:");
                console.log(sortedResult);
                // console.log(filteredResult.created_at);
                // execute the arrow function for each tweet
                // {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach}
                sortedResult.forEach(tweetObject => {
                    // create a container for individual tweet
                    const tweet = document.createElement("li");
                    
                    // const moment = require('moment');
                    //var date = moment(tweetObject.created_at).format("MMM M");
                    //var tweetTime = document.createTextNode(date);
                    // e.g. create a div holding tweet content
                    const tweetContent = document.createElement("div");
                    tweetContent.style.backgroundColor = "white";
                    tweetContent.style.padding = "25px"
                    tweetContent.style.borderBottom = "1px solid #e6ecf0";
                    
                    var bold = document.createElement('b');
                    /**var dateDiv = document.createElement('p');
                    dateDiv.style.color = "grey";
                    dateDiv.style.display = "inline";
                    dateDiv.style.paddingLeft = "13px";*/
                    // create a text node "safely" with HTML characters escaped
                    // {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/createTextNode}
                    var tweetAuthor = document.createTextNode(tweetObject.author);
                    const tweetText = document.createTextNode(tweetObject.text);

                    console.log("author:");
                    console.log(tweetAuthor);
                    console.log("text:");
                    console.log(tweetText);
                
                    //var tweetImg = document.createElement("img");
                    const newline2 = document.createElement("br");
                    const newline = document.createElement("br");
                    //tweetImg.src = tweetObject.user.profile_image_url;
                    //tweetImg.style.borderRadius = "50%";
                    //tweetImg.style.paddingRight = "10px";
                    // append the text node to the div
                   // tweetContent.appendChild(tweetImg);
                    bold.appendChild(tweetAuthor);
                    //dateDiv.appendChild(tweetTime)
                    tweetContent.appendChild(bold);
                    //tweetContent.appendChild(dateDiv);
                    tweetContent.appendChild(newline);
                    tweetContent.appendChild(tweetText);
                    tweetContent.appendChild(newline2);

                    // you may want to put more stuff here like time, username...
                    tweet.appendChild(tweetContent);

                    // finally append your tweet into the tweet list
                    tweetList.appendChild(tweet);
                    console.log(tweet);
                  
                });
            }
    }
</script>